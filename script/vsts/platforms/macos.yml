jobs:
  - job: macOS_build
    displayName: macOS build
    dependsOn: GetReleaseVersion
    timeoutInMinutes: 180

    variables:
      ReleaseVersion: $[ dependencies.GetReleaseVersion.outputs['Version.ReleaseVersion'] ]
      IsReleaseBranch: $[ dependencies.GetReleaseVersion.outputs['Version.IsReleaseBranch'] ]
      IsSignedZipBranch: $[ dependencies.GetReleaseVersion.outputs['Version.IsSignedZipBranch'] ]
    pool:
      vmImage: macos-10.14

    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: 10.2.1
        displayName: Install Node.js 10.2.1

      - script: npm install --global npm@6.2.0
        displayName: Update npm

      - task: 1ESLighthouseEng.PipelineArtifactCaching.RestoreCacheV1.RestoreCache@1
        displayName: Restore node_modules cache
        inputs:
          keyfile: 'package.json, script/vsts/platforms/macos.yml, **/package-lock.json, !**/node_modules/**/package-lock.json, !**/.*/**/package-lock.json'
          targetfolder: '**/node_modules, !**/node_modules/**/node_modules'
          vstsFeed: 'bae1bc26-220d-43c7-a955-4de039370de2'

      - script: script/bootstrap
        displayName: Bootstrap build environment
        env:
          CI: true
          CI_PROVIDER: VSTS
          NPM_BIN_PATH: /usr/local/bin/npm
        condition: ne(variables['CacheRestored'], 'true')

      - task: 1ESLighthouseEng.PipelineArtifactCaching.SaveCacheV1.SaveCache@1
        displayName: Save node_modules cache
        inputs:
          keyfile: 'package.json, script/vsts/platforms/macos.yml, **/package-lock.json, !**/node_modules/**/package-lock.json, !**/.*/**/package-lock.json'
          targetfolder: '**/node_modules, !**/node_modules/**/node_modules'
          vstsFeed: 'bae1bc26-220d-43c7-a955-4de039370de2'

      - script: script/lint
        displayName: Run linter

      - script: |
          if [ $IS_RELEASE_BRANCH == "true" ] || [ $IS_SIGNED_ZIP_BRANCH == "true" ]; then
            script/build --no-bootstrap --code-sign --compress-artifacts
          else
            script/build --no-bootstrap --code-sign --compress-artifacts
          fi
        displayName: Build Atom
        env:
          GITHUB_TOKEN: $(GITHUB_TOKEN)
          IS_RELEASE_BRANCH: $(IsReleaseBranch)
          IS_SIGNED_ZIP_BRANCH: $(IsSignedZipBranch)
          ATOM_RELEASE_VERSION: $(ReleaseVersion)
          ATOM_MAC_CODE_SIGNING_CERT_DOWNLOAD_URL: $(ATOM_MAC_CODE_SIGNING_CERT_DOWNLOAD_URL)
          ATOM_MAC_CODE_SIGNING_CERT_PASSWORD: $(ATOM_MAC_CODE_SIGNING_CERT_PASSWORD)
          ATOM_MAC_CODE_SIGNING_KEYCHAIN: $(ATOM_MAC_CODE_SIGNING_KEYCHAIN)
          ATOM_MAC_CODE_SIGNING_KEYCHAIN_PASSWORD: $(ATOM_MAC_CODE_SIGNING_KEYCHAIN_PASSWORD)
          AC_USER: $(AC_USER)
          AC_PASSWORD: $(AC_PASSWORD)
